name: build kernel [AOSP]
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Prepare timezone 
      run: |
            echo "BUILD_TIME=$(TZ=Asia/Jakarta date "+%d%m%Y-%H%M")" >> $GITHUB_ENV
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        
    - name: Install Dependencies
      run: |
            sudo apt update -y
            sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 -y
            sudo aptitude install libssl-dev -y
        
    - name: Fetch Toolchains 
      run: |
            mkdir clang && cd clang && curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman" && chmod a+x antman && ./antman -S && ./antman --patch=glibc && cd .. && ls
            git clone https://github.com/greenforce-project/gcc-arm64 -b main --depth=1 gcc64
            git clone https://github.com/greenforce-project/gcc-arm -b main --depth=1 gcc32
                                    
    - name: Fetch KernelSU-SuSFS
      run: |
            curl -LSs "https://raw.githubusercontent.com/slipzsix/KernelSU-Next/susfs/kernel/setup.sh" | bash -s susfs  

    - name: AOSP Dimensi
      run: |
            sed -i 's/qcom,mdss-pan-physical-width-dimension = <695>;$/qcom,mdss-pan-physical-width-dimension = <69>;/' arch/arm64/boot/dts/qcom/dsi-panel-k6-38-0c-0a-fhd-dsc-video.dtsi
            sed -i 's/qcom,mdss-pan-physical-height-dimension = <1546>;$/qcom,mdss-pan-physical-height-dimension = <154>;/' arch/arm64/boot/dts/qcom/dsi-panel-k6-38-0c-0a-fhd-dsc-video.dtsi
                                                                      
    - name: Building Kernel
      run: |
        export ARCH=arm64
        export PATH="${PWD}/clang/bin:${PWD}gcc64/bin:${PWD}gcc32/bin:${PATH}"
        export KBUILD_BUILD_USER=usertest
        export KBUILD_BUILD_HOST=my_yusuf_19
        export KBUILD_COMPILER_STRING="${PWD}/clang"
        make O=out ARCH=arm64 vendor/sweet_defconfig 
        make -j$(nproc --all) O=out \
           ARCH=arm64 \
           LLVM=1 \
           LLVM_IAS=1 \
           AR=llvm-ar \
           NM=llvm-nm \
           LD=ld.lld \
           OBJCOPY=llvm-objcopy \
           OBJDUMP=llvm-objdump \
           STRIP=llvm-strip \
           CC=clang \
           CROSS_COMPILE=aarch64-linux-gnu- \
           CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
           V=1
        mv out/.config out/sweet_defconfig.txt
           
    - name: Upload defconfig 
      uses: actions/upload-artifact@v4
      with:
        name: defconfig-${{ env.BUILD_TIME }}
        path: out/sweet_defconfig.txt

    - name: Fetch AnyKernel3
      run: |
           git clone --depth=1 https://github.com/slipzsix/Anykernel3.git -b main AnyKernel3  
           if [ -f out/arch/arm64/boot/Image.gz ]; then
            cp out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
           fi
           if [ -f out/arch/arm64/boot/dtbo.img ]; then
            cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
           fi           
           if [ -f out/arch/arm64/boot/dtb.img ]; then
            cp out/arch/arm64/boot/dtb.img AnyKernel3/dtb.img
           fi
                    
    - name: Upload Kernel
      uses: actions/upload-artifact@v4
      with:
        name: SuperRyzenS-AOSP-${{ env.BUILD_TIME }}
        path: AnyKernel3/*
